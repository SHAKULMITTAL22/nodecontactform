// Test generated by RoostGPT for test nodejs-test-1 using AI Type Vertex AI and AI Model code-bison

// Import the necessary modules
const express = require('express');
const bodyParser = require('body-parser');
const exphbs = require('express-handlebars');
const path = require('path');
const nodemailer = require('nodemailer');

// Create an Express app
const app = express();

// Use body-parser middleware
app.use(bodyParser.urlencoded({ extended: false }));

// Set the view engine to Handlebars
app.engine('handlebars', exphbs({ defaultLayout: 'main' }));
app.set('view engine', 'handlebars');

// Set the static folder
app.use(express.static(path.join(__dirname, 'public')));

// Define the route for the home page
app.get('/', (req, res) => {
  res.render('index');
});

// Define the route for the contact page
app.post('/contact', (req, res) => {
  // Get the form data
  const name = req.body.name;
  const email = req.body.email;
  const message = req.body.message;

  // Create a transporter object
  const transporter = nodemailer.createTransport({
    service: 'Gmail',
    auth: {
      user: 'your_email_address',
      pass: 'your_password'
    }
  });

  // Create a mail options object
  const mailOptions = {
    from: 'your_email_address',
    to: 'recipient_email_address',
    subject: 'Message from ' + name,
    text: message
  };

  // Send the email
  transporter.sendMail(mailOptions, (err, info) => {
    if (err) {
      console.log(err);
      res.render('contact', { error: 'There was an error sending your message.' });
    } else {
      console.log(info);
      res.render('contact', { success: 'Your message has been sent.' });
    }
  });
});

// Start the server
app.listen(3000, () => console.log('Server started...'));
